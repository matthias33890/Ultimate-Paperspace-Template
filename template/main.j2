#!/bin/bash
set -e

current_dir=$(dirname "$(realpath "$0")")
cd $current_dir
source .env

# Set up a trap to call the error_exit function on ERR signal
trap 'error_exit "### ERROR ###"' ERR


echo "### Setting up {{ title }} ###"
log "Setting up {{ title }}"
if [[ "$REINSTALL_{{ name|upper }}" || ! -f "/tmp/{{ name }}.prepared" ]]; then

    {% if prepare_repo %}{{ prepare_repo | indent(4)}}{% endif %}
    rm -rf $VENV_DIR/{{ name }}-env
    {% if use_python %}
    {% if python_version %}
    python3.{{ python_version }} -m venv $VENV_DIR/{{ name }}-env
    {% else %}
    python3 -m venv /tmp/{{ name }}-env
    {% endif %}
    source $VENV_DIR/{{ name }}-env/bin/activate

    pip install pip==24.0
    pip install --upgrade wheel setuptools
    {% endif %}
    {{ prepare_env | indent(4)}}
    
    touch /tmp/{{ name }}.prepared
else
    {% if use_python %}
    source $VENV_DIR/{{ name }}-env/bin/activate
    {% else %}
    log "Environment already prepared"
    {% endif %}
fi
log "Finished Preparing Environment for {{ title }}"

{% if download_model %}
if [[ -z "$SKIP_MODEL_DOWNLOAD" ]]; then
  echo "### Downloading Model for {{ title }} ###"
  log "Downloading Model for {{ title }}"
  {{ download_model | indent(2)}}
  log "Finished Downloading Models for {{ title }}"
else
  log "Skipping Model Download for {{ title }}"
fi
{% endif %}
{% if action_before_start %}{{ action_before_start }}{% endif%}

{% if start %}
if [[ -z "$INSTALL_ONLY" ]]; then
  echo "### Starting {{ title }} ###"
  log "Starting {{ title }}"
  {{ start | indent(2) }}
fi
{% endif %}

send_to_discord "{{ title }} Started"
{% if expose %}
if env | grep -q "PAPERSPACE"; then
  send_to_discord "Link: https://$PAPERSPACE_FQDN/{{ name|replace('_', '-') }}/"
fi
{% endif %}
{% if expose %}
if [[ -n "${CF_TOKEN}" ]]; then
  if [[ "$RUN_SCRIPT" != *"{{ name }}"* ]]; then
    export RUN_SCRIPT="$RUN_SCRIPT,{{ name }}"
  fi
  bash $current_dir/../cloudflare_reload.sh
fi
{% endif %}
echo "### Done ###"
